# Generated by Django 5.1 on 2025-01-09 22:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Group",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        max_length=64, unique=True, verbose_name="Grup Adı"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Açıklama"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Oluşturulma Tarihi"
                    ),
                ),
            ],
            options={
                "verbose_name": "Grup",
                "verbose_name_plural": "Gruplar",
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "first_name",
                    models.CharField(
                        default="TempName", max_length=32, verbose_name="Adı"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        default="TempSurname", max_length=32, verbose_name="Soyadı"
                    ),
                ),
                (
                    "phone_country",
                    models.CharField(
                        blank=True,
                        max_length=3,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_country_code",
                                message="Lütfen en çok üç basamaklı (geçerli) bir ülke kodu girin.",
                                regex="^[1-9]{1}[\\d]{0,2}$",
                            )
                        ],
                        verbose_name="Telefon Ülke Codu",
                    ),
                ),
                (
                    "phone_part2",
                    models.CharField(
                        blank=True,
                        max_length=3,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_phone_part2",
                                message="Lütfen üc basamaklı bir sayı girin.",
                                regex="^[\\d]{3}$",
                            )
                        ],
                        verbose_name="Telefon (2. Parça)",
                    ),
                ),
                (
                    "phone_part3",
                    models.CharField(
                        blank=True,
                        max_length=3,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_phone_part2",
                                message="Lütfen üc basamaklı bir sayı girin.",
                                regex="^[\\d]{3}$",
                            )
                        ],
                        verbose_name="Telefon (3. Parça)",
                    ),
                ),
                (
                    "phone_part4",
                    models.CharField(
                        blank=True,
                        max_length=4,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_phone_part4",
                                message="Lütfen dört basamaklı bir sayı girin.",
                                regex="^[\\d]{4}$",
                            )
                        ],
                        verbose_name="Telefon (4. Parça)",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("AUT_GST", "Konuk"),
                            ("AUT_USR", "Kullanıcı"),
                            ("AUT_SUP", "Şef"),
                            ("AUT_MGR", "Yönetici"),
                        ],
                        default="AUT_GST",
                        max_length=8,
                        verbose_name="Yetkinlik",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="Çalışan", max_length=25, verbose_name="Ünvan"
                    ),
                ),
                (
                    "can_create_group",
                    models.BooleanField(
                        default=False, verbose_name="Grup Oluşturma Yetkisi"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Kullanıcı",
                    ),
                ),
            ],
            options={
                "verbose_name": "Çalışan",
                "verbose_name_plural": "Çalışanlar",
                "ordering": ["last_name", "first_name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MemberGroup",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "role_in_group",
                    models.CharField(
                        choices=[
                            ("Yönetici", "Yönetici"),
                            ("Raportör", "Raportör"),
                            ("Üye", "Üye"),
                        ],
                        default="Üye",
                        max_length=32,
                        verbose_name="Gruptaki Rol",
                    ),
                ),
                (
                    "can_create_report",
                    models.BooleanField(
                        default=False,
                        help_text="Bu kullanıcı rapor oluşturabilir.",
                        verbose_name="Rapor Oluşturma Yetkisi",
                    ),
                ),
                (
                    "added_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Gruba Ekleme Tarihi"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="entity.group",
                        verbose_name="Grup",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to="entity.employee",
                        verbose_name="Çalışan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Grup Üyesi",
                "verbose_name_plural": "Grup Üyeleri",
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="No"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=64, unique=True, verbose_name="Ad"),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "parent_unit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entity.unit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Birim",
                "verbose_name_plural": "Birimler",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="employee",
            name="unit",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="employees",
                to="entity.unit",
            ),
        ),
        migrations.AddConstraint(
            model_name="employee",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("first_name__exact", ""), _negated=True),
                    models.Q(("last_name__exact", ""), _negated=True),
                ),
                name="employee_empty_first_and_last_name",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="employee",
            unique_together={("first_name", "last_name")},
        ),
    ]
